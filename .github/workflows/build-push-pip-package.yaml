name: Build and Push PIP Package

on:
  workflow_call:
    inputs:
      major-minor-version:
        description: "Major and minor version number, e.g. 1.2"
        required: true
        type: string
      production-ref:
        default: "refs/heads/master"
        required: false
        type: string

jobs:
  build-push-nuget-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install build dependencies
        run: python3 -m pip install wheel twine

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_CODEARTIFACT_ACCESS_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_CODEARTIFACT_ACCESS_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS CodeArtifact Twine
        run: |
          aws codeartifact login --tool twine --repository ${{ secrets.CODEARTIFACT_REPO }} --domain ${{ secrets.CODEARTIFACT_DOMAIN }} --domain-owner ${{ secrets.CODEARTIFACT_DOMAIN_OWNER }} --region ${{ secrets.AWS_REGION }}

      - name: Install requirements
        run: python3 -m pip install -r requirements.txt

      - name: Test
        run: python3 -m unittest discover -s ./tests

      - if: ${{ github.ref == inputs.production-ref }}
        uses: cacommodities/gha-shared/bump-git-tag@master
        id: bump-git-tag
        with:
          major-minor-version: ${{ inputs.major-minor-version }}
          tag-bump-git-user-name: ${{ secrets.TAG_BUMP_GIT_USER_NAME }}
          tag-bump-git-user-email: ${{ secrets.TAG_BUMP_GIT_USER_EMAIL }}

      - name: Build
        run: BUILD_VERSION= python3 setup.py sdist bdist_wheel

      - name: Push package
        if: ${{ github.ref == inputs.production-ref }}
        run: |
          BUILD_VERSION=${{ steps.bump-git-tag.outputs.version }} python3 setup.py sdist bdist_wheel
          python3 -m twine upload --skip-existing --repository codeartifact dist/*

      - name: Summary
        if: ${{ github.ref == inputs.production-ref }}
        run: |
          echo "### New version: ${{ steps.bump-git-tag.outputs.version }}" >> $GITHUB_STEP_SUMMARY

      - name: Slack notification
        if: ${{ success() || failure() }}
        uses: cacommodities/gha-shared/slack-notification@master
        with:
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          version: ${{ steps.bump-git-tag.outputs.version }}
          status: ${{ job.status }}



